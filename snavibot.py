# coding: utf8
from telegram import InlineKeyboardButton, InlineKeyboardMarkup, Update
from telegram.ext import Updater, CommandHandler, MessageHandler, Filters
import bot_utils
from serv import *
import cf



user_set = [214265986, 294343795]


text1 = "–ù–µ–ø–æ–Ω—è—Ç–Ω–æüòï\n–ß—Ç–æ –±—ã —É–≤–∏–¥–µ—Ç—å —Å–ø–∏—Å–æ–∫ –≤—Å–µ—Ö –∫–æ–º–∞–Ω–¥ –≤–≤–µ–¥–∏—Ç–µ /help"
text2 = '–ü—Ä–æ–≤–µ—Ä—è—é –Ω–æ–º–µ—Ä'
text3 = '-–ú–æ–∂–µ—Ç–µ –æ—Ç–ø—Ä–∞–≤–∏—Ç—å –º–Ω–µ –Ω–æ–º–µ—Ä –ø—Ä–∏–±–æ—Ä–∞ –∫–æ—Ç—Ä—ã–π –Ω—É–∂–Ω–æ –ø—Ä–æ–≤–µ—Ä–∏—Ç—å.\n-–í –Ω–æ–º–µ—Ä–µ –¥–æ–ª–∂–Ω–æ –±—ã—Ç—å —Å–µ–º—å —Ü–∏—Ñ—Ä'
text4 = 'üí¨–í—Å–µ —á—Ç–æ —Å–º–æ–≥ –Ω–∞–π—Ç–∏ –ø–æ –¥–∞–Ω–Ω–æ–º—É –ø—Ä–∏–±–æ—Ä—É:\n\n'




def on_start(update, context):
    chat = update.effective_chat
    context.bot.send_message(chat_id=chat.id, text='–ü—Ä–∏–≤–µ—Ç.\n' + chat.first_name + ' , —á–µ–º –º–æ–≥—É –±—ã—Ç—å –ø–æ–ª–µ–∑–µ–Ω ü•∑')
    cf.Dispatcher_dict_m1 = get_update_dispatcher_data('m1')
    cf.Dispatcher_dict_m3 = get_update_dispatcher_data('m3')
    if check_user(chat.id) == 0: # –µ—Å–ª–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –≤ –∏—Å—Ç–æ—Ä–∏–∏ –Ω–µ—Ç, —Ç–æ–≥–¥–∞ –¥–æ–±–∞–≤–∏–º)
        bot_utils.add_user(chat, context, "214265986")
        

def on_help(update, context):
    chat = update.effective_chat
    context.bot.send_message(chat_id=chat.id, text="/start - –ø—Ä–æ—Å—Ç–æ –ø–æ–∑–¥–æ—Ä–æ–≤–∞—Ç—å—Å—è))\n/help - —Å–ø–∏—Å–æ–∫ –≤—Å–µ—Ö –∫–æ–º–º–∞–Ω–¥\n" + text3)
    if check_user(chat.id) == 0: # –µ—Å–ª–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –≤ –∏—Å—Ç–æ—Ä–∏–∏ –Ω–µ—Ç, —Ç–æ–≥–¥–∞ –¥–æ–±–∞–≤–∏–º)
        bot_utils.add_user(chat, context, "214265986") 

# –ø—Ä–æ–≤–µ—Ä—è–µ–º data —Ñ–∞–π–ª –Ω–∞ –Ω–∞–ª–∏—á–∏–µ id –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –≤ –Ω–µ–º
def check_user(id):
    with open('data', 'r') as f:
        while True:
            line = f.readline()
            if not line:
                break
            list = line.split(' ')
            if list is not None and list[0] == str(id):
                f.close()
                return 1
    return 0

def on_message(update, context):
    res_mess = ''
    chat = update.effective_chat
    text = update.message.text
    if check_user(chat.id) == 0: # –µ—Å–ª–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –≤ –∏—Å—Ç–æ—Ä–∏–∏ –Ω–µ—Ç, —Ç–æ–≥–¥–∞ –¥–æ–±–∞–≤–∏–º)
         bot_utils.add_user(chat, context, "214265986")
    try:
        if len(text) == 7 and text.isdigit():
            number = text
            context.bot.send_message(chat_id=chat.id, text=(text2 + ' ' + text + ' üîÑüë®üèª‚Äçüíª'))
            # –ø—Ä–æ–≤–µ—Ä—è–µ–º –Ω–∞–ª–∏—á–∏–µ –¥–∞–Ω–Ω—ã—Ö –Ω–∞ –ú3
            res_mess += check_data_on_server('m3', number)
            # –ø—Ä–æ–≤–µ—Ä—è–µ–º –Ω–∞–ª–∏—á–∏–µ –¥–∞–Ω–Ω—ã—Ö –Ω–∞ –ú1
            res_mess += check_data_on_server('m1', number)
            context.bot.send_message(chat_id=chat.id, text=(text4 + res_mess))
        else:
            raise
    except:
        context.bot.send_message(chat_id=chat.id, text=text1)

def main():
    print("–ë–æ—Ç –∑–∞–ø—É—â–µ–Ω. –ù–∞–∂–º–∏—Ç–µ Ctrl+C –¥–ª—è –∑–∞–≤–µ—Ä—à–µ–Ω–∏—è")
    cf.Dispatcher_dict_m1 = get_update_dispatcher_data('m1')
    cf.Dispatcher_dict_m3 = get_update_dispatcher_data('m3')

    updater = Updater(cf.TOKEN, use_context=True)
    dispatcher = updater.dispatcher
    dispatcher.add_handler(CommandHandler("atg", bot_utils.add_to_atg))
    dispatcher.add_handler(CommandHandler("start", on_start))
    dispatcher.add_handler(CommandHandler("help", on_help))
    dispatcher.add_handler(MessageHandler(Filters.text | Filters.document.category("text"), on_message))
    #dispatcher.add_handler(MessageHandler(Filters.user(user_set) | Filters.text | Filters.document.category("text"), on_message))
    updater.start_polling()
    updater.idle()


if __name__ == "__main__":
    main()